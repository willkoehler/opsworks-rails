#!/usr/bin/env ruby

require 'aws-sdk-cloudwatch'
require 'sys/filesystem'

Region = '<%= @stack[:region] %>'
InstanceID = '<%= @instance[:ec2_instance_id] %>'
StackName = '<%= @stack[:name] %>'

class CheckDriveSpace

  def run
    @cloud_watch = Aws::CloudWatch::Client.new(region: Region)
    check_drive_space
  end

  private

  def check_drive_space
    log_precent_used_for("/")
  end

  def log_precent_used_for(mount_point)
    @cloud_watch.put_metric_data({
      namespace: "OpsWorks",
      metric_data: [{
          metric_name: "PercentUsed",
          dimensions: [
            { name: 'Stack', value: StackName },
            { name: 'InstanceId', value: InstanceID },
            { name: 'MountPoint', value: mount_point }
          ],
          value: precent_used(mount_point),
          unit: 'Percent'
      }]
    })
  end

  def precent_used(mount_point)
    return 0 unless File.exist?(mount_point)
    stat = Sys::Filesystem.stat(mount_point)
    stat.bytes_used.to_f / stat.bytes_total.to_f * 100
  end
end

CheckDriveSpace.new.run
